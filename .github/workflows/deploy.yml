name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        working-directory: Back/allergy

      - name: Build with Gradle (skip tests)
        run: ./gradlew build -x test
        working-directory: Back/allergy

      - name: Upload JAR to EC2 via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: "Back/allergy/build/libs/allergy-0.0.1-SNAPSHOT.jar"
          target: ${{ secrets.EC2_TARGET_PATH }}


      - name: Run JAR on EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            set -e
            echo '[runner] working dir:' $(pwd)
            ls -l /home/ubuntu/allergy.jar
      
            if pgrep -f allergy.jar >/dev/null; then
              echo '[runner] stop old process'
              pkill -f allergy.jar
              sleep 2
            fi
      
            cd /home/ubuntu
            echo '[runner] start new process'
            nohup java -jar allergy.jar > log.txt 2>&1 &
            echo '[runner] started. pid=' $(pgrep -f allergy.jar)

